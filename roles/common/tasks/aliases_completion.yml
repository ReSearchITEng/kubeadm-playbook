---
- name: aliases and shell completion
  block:
### BASHRC / ZSHRC file set
  - name: aliases - choose where to put aliases - default local
    set_fact: 
      BASHRC: '~/.bashrc'
      ZSHRC: '~/.zshrc'

  - name: aliases - choose where to put aliases - when global, on Debian family
    set_fact: 
      BASHRC: '/etc/bash.bashrc'
      ZSHRC: '/etc/zshrc'
    when:
    - aliases.rc is defined
    - aliases.rc == "global"
    - ansible_os_family == "Debian"

  - name: aliases - choose where to put aliases - when global, on RedHat family
    set_fact: 
      BASHRC: '/etc/bashrc'
      ZSHRC: '/etc/zshrc'
    when:
    - aliases.rc is defined
    - aliases.rc == "global"
    - ansible_os_family == "RedHat"

  - name: aliases - choose where to put aliases - when custom
    set_fact: 
      BASHRC: "{{ aliases.rc_bash_custom | default ('~/.bashrc') }}"
      ZSHRC: "{{ aliases.rc_zsh_custom | default ('~/.zshrc') }}"
    when:
    - aliases.rc is defined
    - aliases.rc == "custom"

### BASH aliases
  - name: aliases-bash - kubectl and helm aliases to "{{ BASHRC | default ('~/.bashrc') }}" (if exists)
    lineinfile:
      dest: "{{ BASHRC | default ('~/.bashrc') }}"
      line: "{{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    with_items: "{{ aliases.list | default ([]) }}"

### ZSH aliases
  - name: aliases-zsh - kubectl aliases to "{{ ZSHRC | default ('~/.zshrc') }}" (if exists)
    lineinfile:
      dest: "{{ ZSHRC | default ('~/.zshrc') }}"
      line: "{{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    with_items: "{{ aliases.list | default ([]) }}"

### BASH Completion    
  - name: aliases-bash-completion - Install optional packages like bash-completion
    package: name={{ item }} state={{ package_state | default ('present') }}
    with_items:
    - bash-completion

  - name: "create /usr/share/bash-completion/completions/[kubeadm, kubectl, helm]"
    shell: "{{ item }} completion bash | sudo tee /usr/share/bash-completion/completions/{{ item }} >/dev/null"
    with_items:
    - kubeadm
    - kubectl
    - helm

  - name: aliases-bash-completion to kubectl aliases in "{{ BASHRC | default ('~/.bashrc') }}" (if exists)
    lineinfile:
      dest: "{{ BASHRC | default ('~/.bashrc') }}"
      line: "[[ -n $PS1 ]] && complete -F __start_kubectl {{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    with_items: "{{ aliases.kubectl_complete_also_aliases | default ([]) }}"
    when:
    - aliases.kubectl_complete_also_aliases is defined

  - name: aliases-bash-completion to helm aliases in "{{ BASHRC | default ('~/.bashrc') }}" (if exists)
    lineinfile:
      dest: "{{ BASHRC | default ('~/.bashrc') }}"
      line: "[[ -n $PS1 ]] && complete -F __start_helm {{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    with_items: "{{ aliases.helm_complete_also_aliases | default ([]) }}"
    when:
    - aliases.helm_complete_also_aliases is defined

### ZSH Completion
  - name: "create /usr/local/share/zsh/site-functions/_[kubeadm, kubectl, helm]"
    shell: "{{ item }} completion zsh | sudo tee /usr/local/share/zsh/site-functions/_{{ item }} >/dev/null"
    with_items:
    - kubeadm
    - kubectl
    - helm

  - name: aliases-zsh-completion to kubectl aliases in "{{ ZSHRC | default ('~/.zshrc') }}" (if exists)
    lineinfile:
      dest: "{{ ZSHRC | default ('~/.zshrc') }}"
      line: "[[ -n $PS1 ]] && compdef __start_kubectl {{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    with_items: "{{ aliases.kubectl_complete_also_aliases | default ([]) }}"
    when:
    - aliases.kubectl_complete_also_aliases is defined

  - name: aliases-zsh-completion to helm aliases in "{{ ZSHRC | default ('~/.zshrc') }}" (if exists)
    lineinfile:
      dest: "{{ ZSHRC | default ('~/.zshrc') }}"
      line: "[[ -n $PS1 ]] && compdef __start_helm {{ item }}"
      state: present
      create: "{{ aliases.file_create_if_missing | default ('no') }}"
    ignore_errors: true
    with_items: "{{ aliases.helm_complete_also_aliases | default ([]) }}"
    when:
    - aliases.helm_complete_also_aliases is defined

  - name: remove ~/.zcompdump before recreate
    file: ~/.zcompdump
    state: absent

  - name: run compinit
    shell: "zsh -c 'compinit -C'"
    args:
      executable: /bin/zsh

  tags:
  - aliases
  when:
  - aliases is defined
  ignore_errors: true
