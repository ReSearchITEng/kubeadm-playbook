---
#- hosts: master
#  become: yes
#  become_method: sudo
#  tags:
#  - helm
#  tasks:

- set_fact:
    env_kc: '{{ proxy_env |default({}) | combine ({"PATH" : "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/bin"  }) | combine ({"KUBECONFIG" :"/etc/kubernetes/admin.conf"}) }}'
  tags:
  - always

- name: helm related crds,webhooks,rbacs,operators via manifests
  block:
  - name: applying pre_helm_manifests
    command: kubectl apply -f {{ item }}
    with_items: '{{ pre_helm_manifests }}'
    environment: '{{env_kc}}'
    when:
    - pre_helm_manifests is defined
    - pre_helm_manifests | length > 0
    register: command_result
    changed_when: '" changed" in command_result.stdout or " created" in command_result.stdout'
    # there might be mutiplce artifacts in the same yaml, so we cannot simply rely on "unchanged"
  tags:
  - pre_helm_manifests
  - charts_deploy

- block:
#  - name: create the namespaces required by the helm charts deployment (deprecated by the new --create-namespace )
#    environment: '{{env_kc}}'
#    shell: 'kubectl create namespace {{ item.namespace }} || true '
#    with_items:
#    - "{{ helm.packages_list }}"
#    when:
#    - helm is defined
#    - helm.packages_list is defined
#    - item.namespace is defined
#    - item.namespace != ""
#    register: command_result
#    changed_when: '"already exists" not in command_result.stderr'

  - name: helm charts/packages deployment - first for the special ones that do not have namespace defined (tigera-operator that creates ns itself)
    environment: '{{env_kc}}'
    command: 'helm upgrade --install --atomic {{ item.name }} {{ item.repo }} {{ item.options | default ("") }}' #--name
    # --atomic is required for helm3, to make sure even failed releases are updated. This at least till this issue is closed: https://github.com/helm/helm/issues/5595
    with_items: 
    - "{{ helm.packages_list }}"
    when:
    - helm is defined
    - helm.packages_list is defined
    - ( item.namespace is not defined ) or ( item.namespace == "" )
    retries: 3
    delay: "{{ CHARTS_DELAY | default(3) }}"
    register: result
    until: result is not failed

  - name: Wait few seconds for deployments to start - 1
    pause: seconds=3
    changed_when: false

  - name: helm charts/packages deployment - now for those that do have namespace defined (most of the charts)
    environment: '{{env_kc}}'
    command: 'helm upgrade --install --create-namespace --atomic --namespace {{ item.namespace | default("default") }} {{ item.name }} {{ item.repo }} {{ item.options | default ("") }}' #--name
    # --atomic is required for helm3, to make sure even failed releases are updated. This at least till this issue is closed: https://github.com/helm/helm/issues/5595
    with_items:
    - "{{ helm.packages_list }}"
    when:
    - helm is defined
    - helm.packages_list is defined
    - item.namespace is defined
    - item.namespace != ""
    retries: 3
    delay: "{{ CHARTS_DELAY | default(3) }}"
    register: result
    until: result is not failed

  - name: Wait few seconds for deployments to start - 2
    pause: seconds=3
    changed_when: false

  - name: CALICO BLOCK
    block:

    - name: Calico - Wait few seconds for deployments to start - wait to make sure calico-node is getting started - required for containerd...
      pause: seconds=30
      changed_when: false

    - name: Calico - wait for calico-node pod to appear - required for containerd cni bug...
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      shell: "kubectl get --all-namespaces pods --no-headers | grep calico-node || true "
      register: command_result
      until: command_result.stdout != ""
      retries: 30
      delay: 7
      changed_when: false
  
    - name: Calico - wait for calico-node pods to become Running - required for containerd cni bug...
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      shell: "kubectl get --all-namespaces pods --no-headers | grep calico-node | grep -v -w 'Running' || true "
      register: command_result
      until: command_result.stdout == ""
      retries: 30
      delay: 7
      changed_when: false

    - name: Calico - Wait few seconds for calico-node is Running 1/1 - required for containerd...
      pause: seconds=20
      changed_when: false
  
    - name: Calico - Restart containerd due to containerd cni bugs are still there in containerd 1.6.6
      systemd: name=containerd state=restarted enabled=yes daemon_reload=yes

    - name: Calico - Wait few seconds for containerd to restart
      pause: seconds=20
      changed_when: false

    ignore_errors: true # so it will work even when the netw is not set to calido
    #TBD when: network is defined and is calico...

  - name: Wait few seconds for deployments to start - 3
    pause: seconds=3
    changed_when: false

  - name: helm full sanity - wait for all installed charts to become running
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: "kubectl get --all-namespaces pods --no-headers | grep -v -w 'Running' || true "
    register: command_result
    tags:
    - sanity_helm
    - sanity
    - charts_deploy_sanity
    until: command_result.stdout == ""
    retries: 60
    delay: 3
    changed_when: false
    when: wait_charts_deploy_sanity | default('false') | bool # it's not mandatory to wait/make sure absolutelly all deployments are fine.
  tags:
  - helm
  - charts_deploy

