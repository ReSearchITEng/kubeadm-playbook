---
#- hosts: master
#  become: yes
#  become_method: sudo
#  tags:
#  - helm
#  tasks:

- set_fact:
    env_kc: '{{ proxy_env |default({}) | combine ({"PATH" : "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/bin"  }) | combine ({"KUBECONFIG" :"/etc/kubernetes/admin.conf"}) }}'
  tags:
  - always

- block:
  - name: check helm version (if exists)
    environment: '{{env_kc}}'
    shell: helm version --template="{{ '{{.Version}}' }}"
    #local_action: shell helm version --template="{{ '{{.Version}}' }}"
    register: helm_version_result

  - name: set_fact helm_install_not_required when existing version is identical
    set_fact: helm_install_not_required="not"
    when:
    - helm_version_result is defined
    - helm_version_result.stdout | length > 0
    - helm_version_result.stdout_lines[0] == helm.helm_version

  - debug:
      msg: 'helm versions compare. Existing (if any): requested: {{helm.helm_version}} and existings (if any): {{helm_version_result.stdout_lines[0]}}'
    when:
    - helm_version_result is defined
    - helm_version_result.stdout | length > 0
    #when: helm_version_result.stdout_lines[0] == helm.helm_version

  ignore_errors: true
  when:
  - helm_version is defined
  tags:
  - helm

- block:
  - name: 'Download helm binary archive {{ helm.archive_url | default ("https://get.helm.sh") }}/helm-{{ helm.helm_version }}-linux-{{ HOST_ARCH }}.tar.gz'
    environment: '{{env_kc}}'
    get_url: 
      url: "{{ helm.archive_url | default ('https://get.helm.sh') }}/helm-{{ helm.helm_version }}-linux-{{ HOST_ARCH }}.tar.gz"
      dest: /tmp/helm-{{ helm.helm_version }}-linux-{{ HOST_ARCH }}.tar.gz
      force: no
      mode: "0755"
    retries: 3
    delay: 3
    register: result
    until: result is not failed
    
  - name: unarchive
    unarchive:
      dest: /tmp/
      src: /tmp/helm-{{ helm.helm_version }}-linux-{{ HOST_ARCH }}.tar.gz
      mode: "0755"
      remote_src: yes

  - name: helm - place binary in destination folder
    copy:
      src: /tmp/linux-{{ HOST_ARCH }}/helm
      dest: /usr/local/bin/
      force: yes
      mode: "0755"
      remote_src: yes
    become: true
    become_user: root
  when:
  - helm_install_not_required is not defined
  - helm_version is defined
  tags:
  - helm

- block:

#  - name: helm repo remove (before add) - deprecated by --force-update flag
#    environment: '{{env_kc}}'
#    command: helm repo remove {{ item.name }}
#    with_items:
#    - '{{ helm.repos | default("") }}'
#    when: helm is defined and helm.repos is defined
#    ignore_errors: true

  - name: helm repo add 
    environment: '{{env_kc}}'
    command: helm repo add --force-update {{ item.name }} {{ item.url }}
    with_items: 
    - '{{ helm.repos | default("") }}'
    when: helm is defined and helm.repos is defined
    retries: 7
    delay: 3
    register: result
    until: result is not failed

  - name: helm repo update #Sometimes initial repo add corrupts the repo and update fixes it.
    environment: '{{env_kc}}'
    command: helm repo update
    when: helm is defined
    retries: 7
    delay: 3
    register: result
    until: result is not failed

  tags:
  - helm

